{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/all/all.component.css","webpack:///./src/app/all/all.component.html","webpack:///./src/app/all/all.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/deployproduct/deployproduct.component.css","webpack:///./src/app/deployproduct/deployproduct.component.html","webpack:///./src/app/deployproduct/deployproduct.component.ts","webpack:///./src/app/displayproducts/displayproducts.component.css","webpack:///./src/app/displayproducts/displayproducts.component.html","webpack:///./src/app/displayproducts/displayproducts.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/productdetails/productdetails.component.css","webpack:///./src/app/productdetails/productdetails.component.html","webpack:///./src/app/productdetails/productdetails.component.ts","webpack:///./src/app/shared/product.ts","webpack:///./src/app/shared/services/product.service.ts","webpack:///./src/app/shared/services/ulogin.service.ts","webpack:///./src/app/shared/services/user.service.ts","webpack:///./src/app/shared/ulogin.ts","webpack:///./src/app/shared/user.ts","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".row{\\r\\n    margin-left: 40px;\\r\\n    margin-top: 20px;\\r\\n   \\r\\n    \\r\\n}\\r\\n.col-3{\\r\\n    margin-bottom: 20px;\\r\\n    width: 120px;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n         <ng-container *ngFor=\\\"let list of lists; let i=index\\\">\\n                <div class=\\\"col-3\\\">\\n                    <div class=\\\"card\\\" style=\\\"width: 15rem;\\\">\\n                        <img class=\\\"card-img-top\\\" [attr.src]= \\\"'http://localhost:8082/productapi/downloadFile?fileName='+list.imageName\\\" alt=\\\"Card image cap\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <h4 class=\\\"card-title\\\">{{list.imageName}}</h4>\\n        \\n                            <a href=\\\"productdetails\\\" class=\\\"btn btn-primary\\\">View</a>\\n                        </div>\\n                    </div>\\n                </div>\\n        </ng-container>        \\n        <div *ngIf=\\\"(i+1) % 2 === 0\\\" class=\\\"w-100\\\"></div>\\n        \\n      \\n </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Products } from '../shared/products';\nimport { ProductService } from '../shared/services/product.service';\nimport { Router } from '@angular/router';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-all',\n  templateUrl: './all.component.html',\n  styleUrls: ['./all.component.css']\n  \n})\nexport class AllComponent implements OnInit {\n\n   imageId : string=\"\";\n   imageName : string = \"\";\n   imageUrl : string = \"\";\n   imagePath : string = \"\";\n\n  \n  lists : Array<any>;\n  list : Products;\n  // selectedRow: number;\n  // showEdit : Boolean = false;\n\n  constructor(private listService: ProductService , private router:Router) { }\n//   public getSantizeUrl(url : string) {\n//     return this.sanitizer.bypassSecurityTrustUrl(url);\n// }\n  ngOnInit() {\n    this.listService.getData().subscribe(data =>{\n      this.lists = data;\n    })\n  }\n  // onEdit(index: number,list,imageId){\n  //   this.showEdit = true;\n  //   this.selectedRow = index;\n  //   this.list=list;\n  //   this.list.imageId=imageId;\n  // }\n  // editImage(imageId,list){\n  //   this.imageId=imageId;\n  //   this.list=list;\n  //   this.listService.editOneProduct(imageId,list)\n  //   .subscribe(data =>{\n  //     this.router.navigate(['/displayproducts',data]);\n  //   }, error => console.log(error));\n  // }\n  // onDelete(index: number,imageId){\n  //   this.listService.deleteOneProduct(imageId)\n  //   .subscribe(()=>{\n  //     this.lists.splice(index, 1);\n  //     console.log(imageId);\n  //   });\n  // }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, Router } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\n\n\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\nimport { AllComponent } from './all/all.component';\nimport { DisplayproductsComponent } from './displayproducts/displayproducts.component';\nimport { DeployproductComponent } from './deployproduct/deployproduct.component';\nimport { ProductdetailsComponent } from './productdetails/productdetails.component';\n\n\n\n\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n   path: 'signup',\n   component:SignupComponent\n },\n {\n  path: 'login',\n  component:LoginComponent\n},\n{\n path: 'all',\n component:AllComponent\n},\n{\n path: 'displayproducts',\n component:DisplayproductsComponent\n},\n{\n path: 'deployproduct',\n component:DeployproductComponent\n},\n{\n  path: 'productdetails',\n  component:ProductdetailsComponent\n }\n\n];\n\n@NgModule({\n  imports: [FormsModule,HttpClientModule,RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { \n  \n}\n","module.exports = \"\"","module.exports = \"<app-header></app-header>\\r\\n<router-outlet></router-outlet>\\r\\n<app-footer></app-footer>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'User-UI-Angular';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { Ng2CarouselamosModule } from 'ng2-carouselamos';\n\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\nimport { AllComponent } from './all/all.component';\nimport { DeployproductComponent } from './deployproduct/deployproduct.component';\nimport { DisplayproductsComponent } from './displayproducts/displayproducts.component';\nimport { ProductdetailsComponent } from './productdetails/productdetails.component';\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    FooterComponent,\n    SignupComponent,\n    LoginComponent,\n    AllComponent,\n    DeployproductComponent,\n    DisplayproductsComponent,\n    ProductdetailsComponent\n    \n    \n \n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgbModule.forRoot(),\n    HttpClientModule,\n    Ng2CarouselamosModule\n   \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \" <div id=\\\"heading\\\">\\n <h3>Deploy&nbsp;Products</h3>\\n</div>\\n\\n<br>\\n\\n<div id=\\\"SelectField\\\">\\n  <select class=\\\"form-control form-control-lg\\\">\\n    <option value=\\\"\\\" selected disabled>Select to Deploy Product/Products</option>\\n    <option (click)=\\\"Single()\\\">Deploy Single Product</option>\\n    <option (click)=\\\"Multiple()\\\">Deploy Multiple Products</option>\\n  </select>\\n      \\n</div>\\n\\n<br><br>\\n<hr>\\n<br>\\n<div id=\\\"Form\\\" *ngIf=\\\"showSingle\\\">\\n    <br>\\n    <label>Image&nbsp;Upload<span id=\\\"required\\\">*</span></label>     \\n    <br><br>\\n    <div *ngIf=\\\"currentFileUpload\\\" class=\\\"progress\\\">\\n      <div class=\\\"progress-bar progress-bar-info progress-bar-striped\\\" role=\\\"progressbar\\\" attr.aria-valuenow=\\\"{{progress.percentage}}\\\"\\n        aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" [ngStyle]=\\\"{width:progress.percentage+'%'}\\\">\\n        {{progress.percentage}}%</div>\\n    </div>\\n    <label class=\\\"btn btn-default\\\"> \\n      <input type=\\\"file\\\" (change)=\\\"selectFile($event)\\\">\\n    </label>\\n    <button id=\\\"buttonUpload\\\" class=\\\"btn btn-info\\\" [disabled]=\\\"!selectedFiles\\\" (click)=\\\"upload()\\\">Upload</button>\\n    <br>\\n    <form method=\\\"POST\\\" [formGroup]=\\\"deployProducts\\\" (ngSubmit)=\\\"deployProduct()\\\">\\n      <div class=\\\"form-group\\\">\\n        <label>Product&nbsp;Name<span id=\\\"required\\\">*</span></label>\\n        <input id=\\\"Fields\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"productName\\\" placeholder=\\\"Enter Product Name\\\" [(ngModel)]=\\\"product.productName\\\" formControlName='productName' />\\n        <div *ngIf=\\\"deployProducts.controls['productName'].touched && !deployProducts.controls['productName'].valid\\\">\\n          <div *ngIf=\\\"deployProducts.controls['productName'].hasError('required')\\\" id=\\\"alertDeploy\\\">\\n            <span id=\\\"required\\\">Product Name is Required!</span>\\n          </div>\\n          <div *ngIf=\\\"deployProducts.controls['productName'].hasError('pattern')\\\" id=\\\"alertDeploy\\\">\\n            <span id=\\\"required\\\">Invalid Product Name!</span>\\n          </div>  \\n        </div>\\n      </div>\\n      <br><br><br><br>\\n  \\n      <div class=\\\"form-group\\\">\\n        <label>Product&nbsp;Type<span id=\\\"required\\\">*</span></label>\\n        <input id=\\\"Fields\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"productType\\\" placeholder=\\\"Enter Product Type\\\" [(ngModel)]=\\\"product.productType\\\" formControlName='productType'/>\\n        <div *ngIf=\\\"deployProducts.controls['productType'].touched && !deployProducts.controls['productType'].valid\\\">\\n          <div *ngIf=\\\"deployProducts.controls['productType'].hasError('required')\\\" id=\\\"alertDeploy\\\">\\n            <span id=\\\"required\\\">Product Type is Required!</span>\\n          </div>\\n          <div *ngIf=\\\"deployProducts.controls['productType'].hasError('pattern')\\\" id=\\\"alertDeploy\\\">\\n            <span id=\\\"required\\\">Invalid Product Type!</span>\\n          </div>  \\n        </div>\\n      </div>\\n      <br><br><br><br>\\n\\n      <div class=\\\"form-group\\\">\\n          <label>Availability&nbsp;Location<span id=\\\"required\\\">*</span></label>\\n          <input id=\\\"Fields\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"availabilityLocation\\\" placeholder=\\\"Enter Availability Location of Product\\\" [(ngModel)]=\\\"product.availabilityLocation\\\" formControlName='availabilityLocation'/>\\n          <div *ngIf=\\\"deployProducts.controls['availabilityLocation'].touched && !deployProducts.controls['availabilityLocation'].valid\\\">\\n            <div *ngIf=\\\"deployProducts.controls['availabilityLocation'].hasError('required')\\\" id=\\\"alertDeploy\\\">\\n              <span id=\\\"required\\\">Availability Location is Required!</span>\\n            </div>\\n            <div *ngIf=\\\"deployProducts.controls['availabilityLocation'].hasError('pattern')\\\" id=\\\"alertDeploy\\\">\\n              <span id=\\\"required\\\">Invalid Availability Location!</span>\\n            </div>  \\n          </div>\\n      </div>\\n      <br><br><br><br>\\n\\n      <div class=\\\"form-group\\\">\\n          <label>Description</label>\\n          <textarea id=\\\"Fields_TextArea\\\" class=\\\"form-control\\\" name=\\\"productDescription\\\" rows=\\\"3\\\" placeholder=\\\"Enter Description of Product with minimum 150 characters\\\" [(ngModel)]=\\\"product.productDescription\\\" formControlName='productDescription'></textarea>\\n          <div *ngIf=\\\"deployProducts.controls['productDescription'].touched && !deployProducts.controls['productDescription'].valid\\\">\\n            <div *ngIf=\\\"deployProducts.controls['productDescription'].hasError('maxLength')\\\" id=\\\"alertDeploy\\\">\\n              <span id=\\\"required\\\">Only 150 characters are allowed!</span>\\n            </div>\\n<!--             <div *ngIf=\\\"deployProducts.controls['productDescription'].hasError('pattern')\\\" id=\\\"alertDeploy\\\">\\n              <span id=\\\"required\\\">Invalid Description!</span>\\n            </div> -->  \\n          </div>\\n      </div>\\n      <br><br><br><br><br><br>\\n \\n        <!-- <label>Image&nbsp;Upload<span id=\\\"required\\\">*</span></label>     \\n          <br><br> -->\\n          <!-- <image-upload [max]=\\\"1\\\" [buttonCaption]=\\\"'Select Image'\\\" [dropBoxMessage]=\\\"'Drop your image here!'\\\"\\n          [clearButtonCaption]=\\\"'Remove'\\\" [class]=\\\"'customClass'\\\">\\n          <input type=\\\"file\\\" class=\\\"form-control-file\\\" name=\\\"imageUpload\\\" accept=\\\"image/*\\\" [(ngModel)]=\\\"deployproduct.imageUpload\\\" formControlName='imageUpload'/>\\n          <div *ngIf=\\\"deployProducts.controls['imageUpload'].touched && !deployProducts.controls['imageUpload'].valid\\\">\\n            <div *ngIf=\\\"deployProducts.controls['imageUpload'].hasError('required')\\\" id=\\\"alertDeploy\\\">\\n              <span id=\\\"required\\\">Product Image is Required!</span>\\n            </div>\\n          </div> \\n          </image-upload>\\n        <br> -->\\n        <button id=\\\"button\\\" type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]='!deployProducts.valid'>Deploy</button>\\n      </form>\\n</div>\\n\\n<br>\\n\\n<!-- <div *ngIf=\\\"showMultiple\\\">\\n  <form id=\\\"Form\\\" method=\\\"POST\\\" [formGroup]=\\\"deployProducts\\\" (ngSubmit)=\\\"deployProduct()\\\">\\n      <div class=\\\"form-group\\\">\\n          <label>Image&nbsp;Upload<span id=\\\"required\\\">*</span></label>     \\n            <br><br>\\n            <image-upload [max]=\\\"100\\\" [buttonCaption]=\\\"'Select Images'\\\" [dropBoxMessage]=\\\"'Drop your images here!'\\\"\\n            [clearButtonCaption]=\\\"'Remove'\\\" [class]=\\\"'customClass'\\\">\\n            <input type=\\\"file\\\" class=\\\"form-control-file\\\" name=\\\"imageUpload\\\" accept=\\\"image/*\\\"\\n            [(ngModel)]=\\\"deployproduct.imageUpload\\\" formControlName='imageUpload'/>\\n            <div *ngIf=\\\"deployProducts.controls['imageUpload'].touched && !deployProducts.controls['imageUpload'].valid\\\">\\n              <div *ngIf=\\\"deployProducts.controls['imageUpload'].hasError('required')\\\" id=\\\"alert\\\">\\n                <span id=\\\"required\\\">Product Image is Required!</span>\\n              </div>\\n            </div>\\n            </image-upload>\\n            <br>\\n            <button id=\\\"button\\\" type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"MultipleForm()\\\" >Upload</button> --><!-- [disabled]='!deployProducts.valid' -->   \\n<!--       </div>\\n  </form>\\n</div>\\n<br>\\n<div *ngIf=\\\"showMultipleForm\\\">\\n  <form>\\n  <table class=\\\"table table-striped\\\">\\n  <thead>          \\n  <tr>\\n  <th>#</th>\\n  <th>Product&nbsp;Name</th>\\n  <th>Product&nbsp;Type</th>\\n  <th>Availability&nbsp;Location</th>\\n  <th>Description</th>\\n  <th>Image</th>\\n  </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let i=index\\\">\\n        <th scope=\\\"row\\\">{{ i + 1 }}</th>\\n        <td>\\n          <input type=\\\"text\\\" name=\\\"productName\\\" placeholder=\\\"Enter Product Name\\\" />\\n        </td>\\n        <td>\\n            <input type=\\\"text\\\" name=\\\"productName\\\" placeholder=\\\"Enter Product Name\\\" />\\n        </td>\\n        <td>\\n            <input type=\\\"text\\\" name=\\\"productName\\\" placeholder=\\\"Enter Product Name\\\" />\\n        </td>\\n        <td>\\n            <input type=\\\"text\\\" name=\\\"productName\\\" placeholder=\\\"Enter Product Name\\\" />\\n        </td>\\n        <td>\\n            <input type=\\\"text\\\" name=\\\"productName\\\" placeholder=\\\"Enter Product Name\\\" />\\n        </td>\\n        <td>\\n          <div class=\\\"img-ul-img\\\" style=\\\"background-image: url()\\\" ng-reflect-ng-style=\\\"[object Object]\\\">\\n\\n          </div>\\n        </td>\\n    </tr>\\n  </tbody>\\n  </table>\\n  </form>\\n</div>          \\n<br> -->\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormArray, FormControl, FormBuilder, NgForm, Validators, ValidatorFn  } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpResponse, HttpEventType } from '@angular/common/http';\nimport { ProductService } from '../shared/services/product.service';\nimport { Product } from '../shared/product';\n\n@Component({\n  selector: 'app-deployproduct',\n  templateUrl: './deployproduct.component.html',\n  styleUrls: ['./deployproduct.component.css']\n})\nexport class DeployproductComponent implements OnInit {\n  productName: string=\"\";\n  productType: string=\"\";\n  availabilityLocation: string=\"\";\n  productDescription: string=\"\";\n\n  selectedFiles: FileList;\n  currentFileUpload: File;\n  progress: { percentage: number } = { percentage: 0 };\n \n\n  deployProducts:FormGroup;\n\n  showSingle: Boolean = false;\n  showMultiple: Boolean = false;\n  showMultipleForm: Boolean = false;\n\n  product: Product = new Product();\n\n  constructor(private formBuilder:FormBuilder, private router:Router,private deployProductService: ProductService) {\n    this.deployProducts=formBuilder.group({\n      productName:['',Validators.compose([Validators.required,Validators.pattern('[a-zA-Z][a-zA-Z]+')])],\n      productType:['',Validators.compose([Validators.required,Validators.pattern('[a-zA-Z][a-zA-Z]+')])],\n      availabilityLocation:['',Validators.compose([Validators.required,Validators.pattern('[a-zA-Z][a-zA-Z]+')])],\n      productDescription: new FormControl('',Validators.compose([Validators.maxLength(150)]))/* ,Validators.pattern('[a-zA-Z][a-zA-Z.,!\"\\s]+') */\n      });\n   }\n\n  ngOnInit() {  \n  }\n\n  selectFile(event) {\n    const file = event.target.files.item(0);\n\n    if (file.type.match('image.*')) {\n      this.selectedFiles = event.target.files;\n    } else {\n      alert('invalid format!');\n    }\n  }\n\n  upload() {\n    this.progress.percentage = 0;\n\n    this.currentFileUpload = this.selectedFiles.item(0);\n    this.deployProductService.fileUpload(this.currentFileUpload).subscribe(event => {\n      if (event.type === HttpEventType.UploadProgress) {\n        this.progress.percentage = Math.round(100 * event.loaded / event.total);\n      } else if (event instanceof HttpResponse) {\n        console.log('File is completely uploaded!');\n      }\n    });\n\n    this.selectedFiles = undefined;\n  }\n\n  Single(){\n    this.showSingle=true;\n    this.showMultiple=false;\n    this.showMultipleForm=false;\n  }\n\n  Multiple(){\n    this.showMultiple=true;\n    this.showSingle=false;\n    this.showMultipleForm=false;\n  }\n\n  MultipleForm(){\n    this.showMultipleForm=true;\n  }\n\n  deployProduct(){\n    this.deployProductService.insertProduct(this.product)\n    .subscribe(data => { console.log(data)\n    },error => console.log(error)\n    );\n    this.product = new Product(); \n  }\n\n}\n","module.exports = \"\"","module.exports = \"<table class=\\\"table table-bordered\\\">\\n  <thead>\\n    <tr>\\n      <th>#</th>\\n      <th>ID</th>\\n      <th>Image</th>\\n      <th>Name</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let list of lists; let i=index\\\">\\n      <th scope=\\\"row\\\">{{i+1}}</th>\\n      <td>{{list.imageId}}</td>\\n      <td>\\n        <img [attr.src]= \\\"'http://localhost:8082/productapi/downloadFile?fileName='+list.imageName\\\" class=\\\"img-thumbnail\\\" style=\\\"height:100px;width: 200px\\\" />\\n      </td>\\n      <td>{{list.imageName}}</td>\\n      <td>\\n          <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"onEdit(i,list,list.imageId)\\\">Edit</button>\\n      </td>\\n      <td>   \\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onDelete(i,vendor.vendorId)\\\">Delete</button>         \\n      </td>\\n</tr>\\n</tbody>\\n</table>\\n          \\n\\n\\n\\n\\n<!-- <div id=\\\"Form\\\" *ngIf=\\\"showEdit\\\">\\n  <form name=\\\"Product_Update\\\" method=\\\"PUT\\\" [formGroup]=\\\"productUpdate\\\" (ngSubmit)=\\\"updateProduct(vendor.vendorId,vendor)\\\">\\n    <div class=\\\"form-group\\\">\\n      <label>imageName<span id=\\\"required\\\">*</span></label>\\n      <input id=\\\"Fields\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"vendorName\\\"  placeholder=\\\"Enter Vendor Name\\\" [(ngModel)]=\\\"vendor.imageName\\\" formControlName='imageName'/>\\n      <div *ngIf=\\\"vendorRegistration.controls['vendorName'].touched && !vendorRegistration.controls['imageName'].valid\\\">\\n        <div *ngIf=\\\"vendorRegistration.controls['vendorName'].hasError('required')\\\" id=\\\"alert\\\">\\n          <span id=\\\"required\\\">Image Name is Required!</span>\\n        </div>\\n        <div *ngIf=\\\"vendorRegistration.controls['vendorName'].hasError('pattern')\\\" id=\\\"alert\\\">\\n          <span id=\\\"required\\\">Invalid Name!</span>\\n        </div>  \\n      </div>\\n    </div> \\n    <br><br><br><br>\\n\\n      <div id=\\\"search_buttons\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]='!vendorRegistration.valid'>Update</button>\\n        &nbsp;&nbsp;&nbsp;\\n        <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n      </div>\\n    </form>\\n</div>   -->\"","import { Component, OnInit } from '@angular/core';\nimport { Products } from '../shared/products';\nimport { ProductService } from '../shared/services/product.service';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '../../../node_modules/@angular/platform-browser';\n\n@Component({\n  selector: 'app-displayproducts',\n  templateUrl: './displayproducts.component.html',\n  styleUrls: ['./displayproducts.component.css']\n})\nexport class DisplayproductsComponent implements OnInit {\n  imageId : string=\"\";\n  imageName : string = \"\";\n  imageUrl : string = \"\";\n  imagePath : string = \"\";\n\n  \n  lists : Array<any>;\n  list : Products;\n  selectedRow: number;\n  showEdit : Boolean = false;\n\n  constructor(private listService: ProductService , private router:Router, private sanitizer: DomSanitizer) { }\n  public getSantizeUrl(url : string) {\n    return this.sanitizer.bypassSecurityTrustUrl(url);\n}\n  ngOnInit() {\n    this.listService.getData().subscribe(data =>{\n      this.lists = data;\n    })\n  }\n  onEdit(index: number,list,imageId){\n    this.showEdit = true;\n    this.selectedRow = index;\n    this.list=list;\n    this.list.imageId=imageId;\n  }\n  editImage(imageId,list){\n    this.imageId=imageId;\n    this.list=list;\n    this.listService.editOneProduct(imageId,list)\n    .subscribe(data =>{\n      this.router.navigate(['/displayproducts',data]);\n    }, error => console.log(error));\n  }\n  onDelete(index: number,imageId){\n    this.listService.deleteOneProduct(imageId)\n    .subscribe(()=>{\n      this.lists.splice(index, 1);\n      console.log(imageId);\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<!-- <footer>\\r\\n    <div id=\\\"footer-info\\\">\\r\\n     <p>Copyright 2018 CompanyName. All rights reserved. &nbsp;&nbsp;&nbsp;&nbsp;<a href=\\\"#\\\">Terms of Service</a> I <a href=\\\"#\\\">Privacy</a></p>\\r\\n    </div>\\r\\n</footer> -->\\r\\n\\r\\n\\r\\n<!-- Footer -->\\r\\n<footer class=\\\"page-footer font-small stylish-color-dark pt-4\\\">\\r\\n\\r\\n    <!-- Footer Links -->\\r\\n    <div class=\\\"container text-center text-md-left\\\">\\r\\n\\r\\n      <!-- Grid row -->\\r\\n      <div class=\\\"row\\\">\\r\\n\\r\\n        <!-- Grid column -->\\r\\n        <div class=\\\"col-md-4 mx-auto\\\">\\r\\n\\r\\n          <!-- Content -->\\r\\n          <h5 class=\\\"font-weight-bold text-uppercase mt-3 mb-4\\\">About Us</h5>\\r\\n          <p>We provide our customers 100% pure and unique recipes and things made with locally\\r\\n            sourced produce. The authentic hometown flavours of our products\\r\\n        help our customers connect emotionally with their products. With our products people \\r\\n        don’t have to wait to visit the places to experience their unique offerings.</p>\\r\\n\\r\\n        </div>\\r\\n        <!-- Grid column -->\\r\\n\\r\\n        <hr class=\\\"clearfix w-100 d-md-none\\\">\\r\\n\\r\\n        <!-- Grid column -->\\r\\n        <div class=\\\"col-md-2 mx-auto\\\">\\r\\n\\r\\n          <!-- Links -->\\r\\n          <h5 class=\\\"font-weight-bold text-uppercase mt-3 mb-4\\\">Links</h5>\\r\\n\\r\\n          <ul class=\\\"list-unstyled\\\">\\r\\n            <li>\\r\\n              <a [routerLink]=\\\"['']\\\">Home</a>\\r\\n            </li>\\r\\n            <li>\\r\\n              <a [routerLink]=\\\"['deployproduct']\\\">DeployProducts</a>\\r\\n            </li>\\r\\n            <li>\\r\\n              <a [routerLink]=\\\"['displayproduct']\\\">Products</a>\\r\\n            </li>\\r\\n            <li>\\r\\n              <a href=\\\"#!\\\">Contact</a>\\r\\n            </li>\\r\\n          </ul>\\r\\n\\r\\n        </div>\\r\\n        <!-- Grid column -->\\r\\n\\r\\n        <hr class=\\\"clearfix w-100 d-md-none\\\">\\r\\n\\r\\n        <!-- Grid column -->\\r\\n        <div class=\\\"col-md-2 mx-auto\\\">\\r\\n\\r\\n          <!-- Links -->\\r\\n          <h5 class=\\\"font-weight-bold text-uppercase mt-3 mb-4\\\">Links</h5>\\r\\n\\r\\n          <ul class=\\\"list-unstyled\\\">\\r\\n            <li>\\r\\n              <a [routerLink]=\\\"['register']\\\">VendorRegistration</a>\\r\\n            </li>\\r\\n            <li>\\r\\n              <a [routerLink]=\\\"['placeregister']\\\">PlaceRegistration</a>\\r\\n            </li>\\r\\n            <li>\\r\\n              <a [routerLink]=\\\"['foodregister']\\\">FoodRegistration</a>\\r\\n            </li>\\r\\n          </ul>\\r\\n\\r\\n        </div>\\r\\n        <!-- Grid column -->\\r\\n\\r\\n        <hr class=\\\"clearfix w-100 d-md-none\\\">\\r\\n\\r\\n        <!-- Grid column -->\\r\\n        <div class=\\\"col-md-2 mx-auto\\\">\\r\\n\\r\\n          <!-- Links -->\\r\\n          <h5 class=\\\"font-weight-bold text-uppercase mt-3 mb-4\\\">Links</h5>\\r\\n\\r\\n          <ul class=\\\"list-unstyled\\\">\\r\\n            <li>\\r\\n              <a [routerLink]=\\\"['search']\\\">VendorData</a>\\r\\n            </li>\\r\\n            <li>\\r\\n              <a [routerLink]=\\\"['searchplace']\\\">PlaceData</a>\\r\\n            </li>\\r\\n            <li>\\r\\n              <a [routerLink]=\\\"['searchfood']\\\">FoodData</a>\\r\\n            </li>\\r\\n          </ul>\\r\\n\\r\\n        </div>\\r\\n        <!-- Grid column -->\\r\\n\\r\\n      </div>\\r\\n      <!-- Grid row -->\\r\\n\\r\\n    </div>\\r\\n    <!-- Footer Links -->\\r\\n\\r\\n    <hr>\\r\\n\\r\\n    <!-- Call to action -->\\r\\n    <ul class=\\\"list-unstyled list-inline text-center py-2\\\">\\r\\n      <li class=\\\"list-inline-item\\\">\\r\\n        <h5 class=\\\"mb-1\\\">Register for free</h5>\\r\\n      </li>\\r\\n      <li class=\\\"list-inline-item\\\">\\r\\n        <a href=\\\"#!\\\" class=\\\"btn btn-danger btn-rounded\\\">Sign up!</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <!-- Call to action -->\\r\\n\\r\\n    <hr>\\r\\n\\r\\n    <!-- Social buttons -->\\r\\n    <ul class=\\\"list-unstyled list-inline text-center\\\">\\r\\n      <li class=\\\"list-inline-item\\\">\\r\\n        <a class=\\\"btn-floating btn-fb mx-1\\\">\\r\\n          <i class=\\\"fa fa-facebook\\\"> </i>\\r\\n        </a>\\r\\n      </li>\\r\\n      <li class=\\\"list-inline-item\\\">\\r\\n        <a class=\\\"btn-floating btn-tw mx-1\\\">\\r\\n          <i class=\\\"fa fa-twitter\\\"> </i>\\r\\n        </a>\\r\\n      </li>\\r\\n      <li class=\\\"list-inline-item\\\">\\r\\n        <a class=\\\"btn-floating btn-gplus mx-1\\\">\\r\\n          <i class=\\\"fa fa-google-plus\\\"> </i>\\r\\n        </a>\\r\\n      </li>\\r\\n      <li class=\\\"list-inline-item\\\">\\r\\n        <a class=\\\"btn-floating btn-li mx-1\\\">\\r\\n          <i class=\\\"fa fa-linkedin\\\"> </i>\\r\\n        </a>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <!-- Social buttons -->\\r\\n\\r\\n    <!-- Copyright -->\\r\\n    <div id=\\\"Copyright\\\" class=\\\"footer-copyright text-center py-3\\\">© 2018 Copyright:\\r\\n      <a href=\\\"http://localhost:4200/\\\"> NativeFood.com</a>\\r\\n    </div>\\r\\n    <!-- Copyright -->\\r\\n\\r\\n</footer>\\r\\n<!-- Footer -->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".navbar-light .navbar-nav .nav-link{\\r\\n    color: black;\\r\\n}\"","module.exports = \"<div>\\n    <img id=\\\"image\\\" alt=\\\"BackGroundImage\\\" src=\\\"/assets/images/BackgroundImage2.jpg\\\">\\n</div>\\n<!-- <div>\\n    <img id=\\\"imageHeader\\\" alt=\\\"BackGroundImage\\\" src=\\\"/assets/images/cropped-1349-280-454233.jpg\\\">\\n</div> -->    \\n<div id=\\\"headerimage\\\">\\n  <div class=\\\"wrapper\\\">\\n    <h1>Native Food</h1>\\n  </div>\\n</div>\\n<header>\\n    <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <!-- <a class=\\\"navbar-brand\\\">NativeFood</a>\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button> -->\\n    \\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n            <li ngbDropdown class=\\\"nav-item dropdown\\\">\\n                <a ngbDropdownToggle class=\\\"nav-link dropdown-toggle\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                    Categories\\n                </a>\\n                <div ngbDropdownMenu class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n                  <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['all']\\\">all</a>\\n                  <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['sweets']\\\">Sweets</a>\\n                  <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['bakery']\\\">Bakery</a>\\n                </div>\\n              </li>\\n\\n         \\n          <!-- <li ngbDropdown class=\\\"nav-item dropdown\\\">\\n            <a ngbDropdownToggle class=\\\"nav-link dropdown-toggle\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n              Vendor Configuration\\n            </a>\\n            <div ngbDropdownMenu class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n              <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['vendoregister']\\\">Vendor Register</a>\\n              <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['placeregister']\\\">Place Register</a>\\n              <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['foodregister']\\\">Food Register</a>\\n            </div>\\n          </li> -->\\n          <li class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['']\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n         \\n          <!-- <li ngbDropdown class=\\\"nav-item dropdown\\\">\\n              <a ngbDropdownToggle class=\\\"nav-link dropdown-toggle\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                View Data\\n              </a>\\n              <div ngbDropdownMenu class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n                <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['search']\\\">Vendor Data</a>\\n                <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['searchplace']\\\">Place Data</a>\\n                <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['searchfood']\\\">Food Data</a>\\n              </div>\\n          </li> -->\\n          <li class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['deployproduct']\\\">DeployProducts</a>\\n          </li>\\n          <li class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['displayproducts']\\\">Products</a>\\n          </li> \\n          <li class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['signup']\\\">SignUp</a>\\n          </li>\\n          <li class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['login']\\\">Login</a>\\n          </li>\\n          \\n        </ul>\\n        <form class=\\\"form-inline my-2 my-lg-0\\\">\\n          <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\n          <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n        </form>\\n      </div>\\n</nav>\\n</header>\"","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() {\n   }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"#container {\\r\\n    width: 100%;\\r\\n    margin: 5em auto;\\r\\n    padding: 0;\\r\\n    background:#ECF0F1;\\r\\n}\\r\\n\\r\\n.items {\\r\\n    max-width: 100%;\\r\\n    height:450px;\\r\\n    background:#ECECEC;\\r\\n}\\r\\n\\r\\n#left, #right { \\r\\n    margin: 30px;\\r\\n}\"","module.exports = \"<div id=\\\"container\\\">\\r\\n  <div ng2-carouselamos class=\\\"slides-wrapper\\\"\\r\\n          [items]=\\\"items\\\"\\r\\n          [width]=\\\"900\\\"\\r\\n          [$prev]=\\\"prev\\\"\\r\\n          [$next]=\\\"next\\\"\\r\\n          [$item]=\\\"item\\\"\\r\\n        >\\r\\n        <ng-template #prev>\\r\\n          <img src=\\\"../../assets/images/if_nav-arrow-left_383101.png\\\" id=\\\"left\\\" />\\r\\n        </ng-template>\\r\\n        <ng-template #next>\\r\\n          <img src=\\\"../../assets/images/if_nav-arrow-right_383100.png\\\" id=\\\"right\\\" />\\r\\n        </ng-template>\\r\\n        <ng-template #item let-item let-i=\\\"index\\\">      \\r\\n          <div class=\\\"items\\\">\\r\\n            <img src=\\\"{{ item.name }}\\\">\\r\\n          </div>\\r\\n        </ng-template>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\n/* import { FormBuilder, FormGroup, FormArray, FormControl, ValidatorFn } from '@angular/forms';\n */\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  items: Array<any> = [];\n  /* form: FormGroup;\n  orders = [\n    { id: 100, name: 'order 1' },\n    { id: 200, name: 'order 2' },\n    { id: 300, name: 'order 3' },\n    { id: 400, name: 'order 4' }\n  ]; */\n  constructor(/* private formBuilder: FormBuilder */) {\n    /* const controls = this.orders.map(c => new FormControl(false));\n    controls[0].setValue(true);\n\n    this.form = this.formBuilder.group({\n      orders: new FormArray(controls, minSelectedCheckboxes(1))\n    }); */\n    this.items = [\n      { name: '../../assets/images/1.jpeg' },\n      { name: '../../assets/images/2.jpeg' },\n      { name: '../../assets/images/3.jpeg' }\n    ]\n   }\n\n  ngOnInit() {\n  }\n  /* submit() {\n    const selectedOrderIds = this.form.value.orders\n      .map((v, i) => v ? this.orders[i].id : null)\n      .filter(v => v !== null);\n\n    console.log(selectedOrderIds);\n  } */\n}\n\n/* function minSelectedCheckboxes(min = 1) {\n  const validator: ValidatorFn = (formArray: FormArray) => {\n    const totalSelected = formArray.controls\n      .map(control => control.value)\n      .reduce((prev, next) => next ? prev + next : prev, 0);\n\n    return totalSelected >= min ? null : { required: true };\n  };\n\n  return validator;\n} */","module.exports = \".avatar {\\r\\n    vertical-align: middle;\\r\\n     height: 50px;\\r\\n    border-radius: 50%;\\r\\n    width:200px;\\r\\n}\"","module.exports = \"<div> \\n  <h2 id=\\\"heading\\\">LOGIN</h2> \\n  </div>\\n<div id=\\\"Form\\\">\\n  <form name=\\\"login_Form\\\" method=\\\"POST\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"saveLogin()\\\">\\n    <label>Email<span id=\\\"required\\\">*</span></label>\\n      <input id=\\\"Fields\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"userEmail\\\" placeholder=\\\"Enter User Email\\\" [(ngModel)]=\\\"ulogin.userEmail\\\" formControlName='userEmail' />\\n      <div *ngIf=\\\"loginForm.controls['userEmail'].touched && !loginForm.controls['userEmail'].valid\\\">\\n      <div *ngIf=\\\"loginForm.controls['userEmail'].hasError('required')\\\" id=\\\"alert\\\">\\n      <span id=\\\"required\\\">Email is Required!</span>\\n      </div>\\n      <div *ngIf=\\\"loginForm.controls['userEmail'].hasError('pattern')\\\" id=\\\"alert\\\">\\n      <span id=\\\"required\\\">Invalid Email!</span>\\n      </div>\\n \\n      </div>\\n      <br><br>\\n           \\n      <div class=\\\"form-group\\\">\\n      <label>Password<span id=\\\"required\\\">*</span></label>\\n      <input id=\\\"Fields\\\" class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"userPassword\\\" placeholder=\\\"Enter Password\\\" [(ngModel)]=\\\"ulogin.userPassword\\\" formControlName='userPassword' />\\n      <div *ngIf=\\\"loginForm.controls['userPassword'].touched && !loginForm.controls['userPassword'].valid\\\">\\n      <div *ngIf=\\\"loginForm.controls['userPassword'].hasError('required')\\\" id=\\\"alert\\\">\\n      <span id=\\\"required\\\">Password is Required!</span>\\n      </div>\\n      <div *ngIf=\\\"loginForm.controls['userPassword'].hasError('pattern')\\\" id=\\\"alert\\\">\\n      <span id=\\\"required\\\">Invalid Password!</span>\\n      </div>\\n      </div>\\n      </div>\\n      <br><br>  \\n\\n\\n      \\n    <div class=\\\"form-group\\\">\\n      <label>User Type<span id=\\\"required\\\">*</span></label>\\n      <select id=\\\"Fields\\\" class=\\\"form-control\\\" name=\\\"userType\\\" [(ngModel)]=\\\"ulogin.userType\\\" formControlName='userType'>\\n        <option value=\\\"\\\" selected disabled>Select</option>\\n        <option value=\\\"user\\\">user</option>\\n        <option value=\\\"admin\\\">admin</option>\\n      </select>\\n      <div *ngIf=\\\"loginForm.controls['userType'].touched && !loginForm.controls['userType'].valid\\\">\\n        <div *ngIf=\\\"loginForm.controls['userType'].hasError('required')\\\" id=\\\"alert\\\">\\n          <span id=\\\"required\\\">User Type is Required!</span>\\n        </div>\\n      </div>\\n    </div>\\n    <br><br><br>\\n\\n      <nav>\\n          <a [routerLink]=\\\"['/success']\\\"> \\n          <button id=\\\"button\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Submit</button></a>\\n          </nav>\\n    \\n              <!-- <button class=\\\"btn btn-primary\\\" >Submit</button></a> -->\\n              <!-- <button id=\\\"button\\\" type=\\\"submit\\\" [disabled]='!loginForm.valid'>Submit</button>     -->\\n    </form>\\n    </div>\\n    <br>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormArray, FormControl, FormBuilder, NgForm, Validators, ValidatorFn } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UloginService } from '../shared/services/ulogin.service';\nimport { Ulogin } from '../shared/ulogin';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  [x: string]: any;\n\n  userEmail:string;\n  userPassword:string;\n  userType:string;\n\n  emailPattern:string=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\";\n  \n  loginForm :FormGroup;\n  \n  ulogin: Ulogin  = new Ulogin();\n  \n  constructor(private frmbuilder:FormBuilder, private router:Router,private uloginService: UloginService) \n  {\n    this.loginForm=frmbuilder.group({\n     \n    userEmail:['',Validators.compose([Validators.required,Validators.pattern(this.emailPattern)])],\n    userPassword:['',Validators.compose([Validators.required])],\n    userType:['',Validators.compose([Validators.required])]\n    })\n  }\n  ngOnInit() {\n            }\n  MSCredentials = {userEmail: '', userPassword: '',userType: ''};\n//   saveLogin()\n//   {\n//     this.uloginService.create(this.ulogin)\n//     .subscribe(data =>\n//       {\n//         this.router.navigate(['/success',data]);\n//       }, error => console.log(error));\n//     this.ulogin = new Ulogin(); \n//   }\n// }\n  saveLogin() {\n     this.app.authenticate(this.credentials, () => {\n      this.router.navigateByUrl('/');\n     });\n      false;\n } }\n// saveLogin()\n// if(this.uloginService.userEmail, this.ulogin.userPassword) {\n//   this.loading = true;\n//   this.userService.login(this.user.userEmail, this.user.userPassword)\n//   .subscribe((res: any) =>  {\n//            this.loader = false;\n//            //check your condition here and redirect to \n//       },\n//        (error) => {\n//           this.loader = false; \n//     });\n//     }\n//  }","module.exports = \".card{\\r\\n  margin-top: 20px\\r\\n}\\r\\n.product-description{\\r\\n    margin-left: 120%;\\r\\n    display: inline-block\\r\\n}\\r\\n.cart-dropdown{\\r\\n   margin-left: 100%;\\r\\n}\\r\\n.card-img-top{\\r\\n  padding-left: 50px;\\r\\n  width: 70%;\\r\\n  height: 80%;\\r\\n  \\r\\n}\"","module.exports = \"<div class=\\\"container row\\\">\\n        <h3>product-description</h3>\\n      </div>\\n      <hr>\\n      <br>\\n      <div class=\\\"carts-body-container row\\\">\\n        <div class=\\\"cart-product-container container row\\\" *ngFor=\\\"let list of lists; let i=index\\\">\\n          <div class=\\\"col-md-5\\\">\\n                <img class=\\\"card-img-top\\\" [attr.src]= \\\"http://localhost:8082/productapi/products/59c0f9cf-17e2-47ec-9e02-1993c8832ae9\\\" alt=\\\"Card image cap\\\">\\n            \\n          </div>\\n          <div class=\\\"product-desc col-md-3\\\">\\n                <h4 class=\\\"card-title\\\">{{list.imageName}}</h4> \\n            \\n          </div>\\n          \\n        </div> \\n      </div>\\n      \\n     \\n      \\n      \\n      \\n      \\n\\n\\n\\n\\n\\n<!-- <div class=\\\"col-3\\\">  \\n    <ng-container *ngFor=\\\"let list of lists; let i=index\\\">\\n  <div class=\\\"card\\\" style=\\\"width: 15rem;\\\">\\n      <img class=\\\"card-img-top\\\" [attr.src]= \\\"'http://localhost:8082/productapi/downloadFile?fileName='+list.imageName\\\" alt=\\\"Card image cap\\\">\\n      <div class=\\\"card-body\\\">\\n          <h4 class=\\\"card-title\\\">{{list.imageName}}</h4> \\n          <div class=\\\"product-description\\\">\\n            <p>ddbdjdvbnvbdvbhvfddddddddbbbbbbbbbbbbbbbbbbbbbddddsddddddd\\n               dddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\\n               dddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\\n               aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n            </p>\\n          </div>\\n          \\n      </div>\\n      \\n  </div>\\n  </ng-container>\\n  <br>\\n  <div>\\n  <a href=\\\"\\\" class=\\\"btn btn-primary\\\">Add to bag</a>\\n  </div>\\n  <br>\\n</div> -->\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Products } from '../shared/products';\nimport { ProductService } from '../shared/services/product.service';\nimport { Router } from '../../../node_modules/@angular/router';\n\n@Component({\n  selector: 'app-productdetails',\n  templateUrl: './productdetails.component.html',\n  styleUrls: ['./productdetails.component.css']\n})\nexport class ProductdetailsComponent implements OnInit {\n\n  imageId : string=\"\";\n  // imageName : string = \"\";\n  // imageUrl : string = \"\";\n  // imagePath : string = \"\";\n\n\n\n  lists : Array<any>;\n  list : Products;\n\n  constructor(private listService: ProductService , private router:Router) { }\n\n  ngOnInit() {\n    this.listService.findByImageId(this.imageId).subscribe(data =>{\n      this.lists = data;\n      })\n  }\n\n}\n","export class Product {\r\n    productName: string;\r\n    productType: string;\r\n    availabilityLocation: string;\r\n    productDescription: string;\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  private baseUrl = '//localhost:8082/productapi/';\n\n  constructor(private http: HttpClient) { } \n\n  fileUpload(file: File): Observable<HttpEvent<{}>> {\n    const formdata: FormData = new FormData();\n\n    formdata.append('file', file);\n\n    const req = new HttpRequest('POST', this.baseUrl+'post', formdata, {\n      reportProgress: true,\n      responseType: 'text'\n    });\n\n    return this.http.request(req);\n  }\n\n\n  insertProduct(product: Object): Observable<Object> {\n    return this.http.post(this.baseUrl+`/products/create`, product);\n  }\n\n  // getAllProducts():Observable<any> {\n  //   return this.http.get(this.baseUrl+'products');\n  // }\n\n  // getOneProduct(productId: string){\n  //   return this.http.get(this.baseUrl+'products/'+productId);\n  // }\n\n  findByImageId(imageId: string): Observable<any>{\n    console.log(imageId);\n      return this.http.get(this.baseUrl+'products/'+imageId);\n   }\n\n  editOneProduct(productId: string, product: Object):Observable<any>{\n    return this.http.put(this.baseUrl+'products/'+productId, product);\n  }\n\n  deleteOneProduct(productId: string){\n    return this.http.delete(this.baseUrl+'products/'+productId);\n  }\n\n  deleteAllProducts(){\n    return this.http.delete(this.baseUrl+'products/delete');\n  }\n  getData():Observable<any> {\n    return this.http.get(this.baseUrl+'getData');\n  }\n  // downloadFile():Observable<any>{\n  //   return this.http.get(this.baseUrl+'downloadFile/'+);\n  // }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UloginService {\n \n  private baseUrl = '//localhost:8091/userapp';\n\n  constructor(private http: HttpClient) {}\n\n  create(ulogin: Object): Observable<Object> {\n   return this.http.post(this.baseUrl+`/login/create`, ulogin);\n   }\n  userLogin(ulogin: Object): Observable<Object> {\n    return this.http.post(this.baseUrl+`/login/userLogin`, ulogin);\n    }\n\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  \n  private baseUrl = '//localhost:8091/userapi/';\n\n  constructor(private http: HttpClient) {}\n  \n     create(user: Object): Observable<Object> {\n      return this.http.post(this.baseUrl+`user/create`, user);\n      }\n\n}\n    \n\n\n","export class Ulogin {\n    userEmail:string;\n    userPassword:string;\n    userType:string;\n}\n","export class User {\r\n    firstName:String;\r\n    lastName:String;\r\n    userEmail:String;\r\n    userPassword:String;\r\n    userType:String;\r\n    userMobile:String;\r\n    userDob:String;\r\n}\r\n","module.exports = \"\"","module.exports = \"<div> \\n    <h2 id=\\\"heading\\\">REGISTRATION</h2> \\n</div>\\n<div id=\\\"Form\\\">\\n    <form name=\\\"user_Registration\\\" method=\\\"POST\\\" [formGroup]=\\\"userRegistration\\\" (ngSubmit)=\\\"saveUser()\\\">\\n <div class=\\\"form-group\\\">\\n    <label>Fisrt Name<span id=\\\"required\\\">*</span></label>\\n    <input id=\\\"Fields\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"firstName\\\" placeholder=\\\"Enter First Name\\\" [(ngModel)]=\\\"user.firstName\\\" formControlName='firstName'/>\\n <div *ngIf=\\\"userRegistration.controls['firstName'].touched && !userRegistration.controls['firstName'].valid\\\">\\n  <div *ngIf=\\\"userRegistration.controls['firstName'].hasError('required')\\\" id=\\\"alert\\\">\\n    <span id=\\\"required\\\">First Name is Required!</span>\\n  </div>\\n  <div *ngIf=\\\"userRegistration.controls['firstName'].hasError('pattern')\\\" id=\\\"alert\\\">\\n    <span id=\\\"required\\\">Invalid First Name!</span>\\n</div> \\n    </div>\\n    </div> \\n    <br>\\n    \\n    <div class=\\\"form-group\\\">\\n    <label>Last Name<span id=\\\"required\\\">*</span></label>\\n    <input id=\\\"Fields\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"lastName\\\" placeholder=\\\"Enter last Name\\\" [(ngModel)]=\\\"user.lastName\\\" formControlName='lastName'/>\\n    <div *ngIf=\\\"userRegistration.controls['lastName'].touched && !userRegistration.controls['lastName'].valid\\\">\\n    <div *ngIf=\\\"userRegistration.controls['lastName'].hasError('required')\\\" id=\\\"alert\\\">\\n    <span id=\\\"required\\\">Last Name is Required!</span>\\n    </div>\\n    <div *ngIf=\\\"userRegistration.controls['lastName'].hasError('pattern')\\\" id=\\\"alert\\\">\\n    <span id=\\\"required\\\">Invalid Last Name!</span>\\n    </div>\\n    </div>\\n    </div>\\n    <br>\\n    <!-- \\n    <div class=\\\"form-group\\\">\\n    <label>City<span id=\\\"required\\\">*</span></label>\\n    <select id=\\\"Fields\\\" class=\\\"form-control\\\" name=\\\"vendorStoreCity\\\" [(ngModel)]=\\\"vendor.vendorStoreCity\\\" formControlName='vendorStoreCity'>\\n    <option value=\\\"\\\" selected disabled>Select City</option>\\n    <option value=\\\"Hyderabad\\\">Hyderabad</option>\\n    <option value=\\\"Warangal\\\">Warangal</option>\\n    <option value=\\\"Karimnagar\\\">Karimnagar</option>\\n    <option value=\\\"Nizamabad\\\">Nizamabad</option>\\n    </select>\\n    <div *ngIf=\\\"vendorRegistration.controls['vendorStoreCity'].touched && !vendorRegistration.controls['vendorStoreCity'].valid\\\">\\n    <div *ngIf=\\\"vendorRegistration.controls['vendorStoreCity'].hasError('required')\\\" id=\\\"alert\\\">\\n    <span id=\\\"required\\\">City is Required!</span>\\n    </div>\\n    </div>\\n    </div>\\n    <br><br><br><br>\\n    --> \\n    <div class=\\\"form-group\\\">\\n    <label>Email<span id=\\\"required\\\">*</span></label>\\n    <input id=\\\"Fields\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"userEmail\\\" placeholder=\\\"Enter User Email\\\" [(ngModel)]=\\\"user.userEmail\\\" formControlName='userEmail' />\\n    <div *ngIf=\\\"userRegistration.controls['userEmail'].touched && !userRegistration.controls['userEmail'].valid\\\">\\n    <div *ngIf=\\\"userRegistration.controls['userEmail'].hasError('required')\\\" id=\\\"alert\\\">\\n    <span id=\\\"required\\\">Email is Required!</span>\\n    </div>\\n    <div *ngIf=\\\"userRegistration.controls['userEmail'].hasError('pattern')\\\" id=\\\"alert\\\">\\n    <span id=\\\"required\\\">Invalid Email!</span>\\n    </div>\\n    </div>\\n    </div>\\n    <br>\\n    \\n    \\n    <div class=\\\"form-group\\\">\\n    <label>Password<span id=\\\"required\\\">*</span></label>\\n    <input id=\\\"Fields\\\" class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"userPassword\\\" placeholder=\\\"Enter Password\\\" [(ngModel)]=\\\"user.userPassword\\\" formControlName='userPassword' />\\n    <div *ngIf=\\\"userRegistration.controls['userPassword'].touched && !userRegistration.controls['userPassword'].valid\\\">\\n    <div *ngIf=\\\"userRegistration.controls['userPassword'].hasError('required')\\\" id=\\\"alert\\\">\\n    <span id=\\\"required\\\">Password is Required!</span>\\n    </div>\\n    <div *ngIf=\\\"userRegistration.controls['userPassword'].hasError('pattern')\\\" id=\\\"alert\\\">\\n    <span id=\\\"required\\\">Invalid Password!</span>\\n    </div>\\n    </div>\\n    </div>\\n    <br>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>User Type<span id=\\\"required\\\">*</span></label>\\n        <select id=\\\"Fields\\\" class=\\\"form-control\\\" name=\\\"userType\\\" [(ngModel)]=\\\"user.userType\\\" formControlName='userType'>\\n          <option value=\\\"\\\" selected disabled>Select</option>\\n          <option value=\\\"user\\\">user</option>\\n          <option value=\\\"admin\\\">admin</option>\\n        </select>\\n        <div *ngIf=\\\"userRegistration.controls['userType'].touched && !userRegistration.controls['userType'].valid\\\">\\n          <div *ngIf=\\\"userRegistration.controls['userType'].hasError('required')\\\" id=\\\"alert\\\">\\n            <span id=\\\"required\\\">User Type is Required!</span>\\n          </div>\\n        </div>\\n      </div>\\n      <br>\\n \\n    <!-- <div class=\\\"form-group\\\">\\n    <label>User Type<span id=\\\"required\\\">*</span></label>\\n    <select id=\\\"Fields\\\" class=\\\"form-control\\\"  name=\\\"userType\\\" [(ngModel)]=\\\"user.userType\\\" formControlName='userType'>\\n          <option>User</option>\\n          <option>Admin</option>\\n    </select>\\n        <div *ngIf=\\\"userRegistration.controls['userType'].touched && !userType.controls['userType'].valid\\\">\\n          <div *ngIf=\\\"userRegistration.controls['userType'].hasError('required')\\\" id=\\\"alert\\\">\\n            <span id=\\\"required\\\">User Type is Required!</span>\\n          </div>\\n        </div>\\n      </div>\\n      <br><br><br><br>\\n               -->\\n\\n\\n\\n\\n\\n    \\n    \\n    <div class=\\\"form-group\\\">\\n    <label>Mobile <span id=\\\"required\\\">*</span></label>\\n    <!-- <input id=\\\"Fields\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"firstName\\\" placeholder=\\\"Enter First Name\\\" [(ngModel)]=\\\"user.firstName\\\" formControlName='firstName'/> -->\\n    <input id=\\\"Fields\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"userMobile\\\" placeholder=\\\"Enter Mobile Number\\\" [(ngModel)]=\\\"user.userMobile\\\" formControlName='userMobile'/>\\n    <div *ngIf=\\\"userRegistration.controls['userMobile'].touched && !userRegistration.controls['userMobile'].valid\\\">\\n    <div *ngIf=\\\"userRegistration.controls['userMobile'].hasError('required')\\\" id=\\\"alert\\\">\\n    <span id=\\\"required\\\">Mobile Number is Required!</span>\\n    </div>\\n    <div *ngIf=\\\"userRegistration.controls['userMobile'].hasError('pattern')\\\" id=\\\"alert\\\">\\n    <span id=\\\"required\\\">Invalid Moblie Number!</span>\\n    </div>\\n    </div>\\n    </div>\\n    <br>\\n          \\n    <div class=\\\"form-group\\\">\\n    <label>DOB <span id=\\\"required\\\">*</span></label>\\n    <input id=\\\"Fields\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"userDob\\\" placeholder=\\\"Enter Date of Birth\\\" [(ngModel)]=\\\"user.userDob\\\" formControlName='userDob' />\\n    <div *ngIf=\\\"userRegistration.controls['userDob'].touched && !userRegistration.controls['userDob'].valid\\\">\\n    <div *ngIf=\\\"userRegistration.controls['userDob'].hasError('required')\\\" id=\\\"alert\\\">\\n    <span id=\\\"required\\\">Date of Birth Number is Required!</span>\\n    </div>\\n    <div *ngIf=\\\"userRegistration.controls['userDob'].hasError('pattern')\\\" id=\\\"alert\\\">\\n    <span id=\\\"required\\\">Invalid Date of Birth!</span>\\n    </div>\\n    </div>\\n    </div>\\n    <br>\\n    \\n    \\n    \\n    \\n    <!--\\n    <div class=\\\"form-group\\\">\\n    <label>Services<span id=\\\"required\\\">*</span></label> \\n    <div *ngIf=\\\"vendorRegistration.controls['services'].touched && !vendorRegistration.controls['services'].valid\\\">\\n    <div *ngIf=\\\"vendorRegistration.controls['services'].hasError('required')\\\" id=\\\"alert\\\">\\n    <span id=\\\"required\\\">Atleast One Service is Required!</span>\\n    </div>\\n    </div>\\n    <div id=\\\"divcheckbox\\\"> \\n    <div id=\\\"checkbox\\\"><input type=\\\"checkbox\\\" name=\\\"services\\\" value=\\\"Breakfast\\\" formControlName='services'/>&nbsp;Breakfast</div>\\n    <div id=\\\"checkbox\\\"><input type=\\\"checkbox\\\" name=\\\"services\\\" value=\\\"Lunch/Dinner\\\" formControlName='services'/>&nbsp;Lunch/Dinner</div>\\n    <div id=\\\"checkbox\\\"><input type=\\\"checkbox\\\" name=\\\"services\\\" value=\\\"Bakery\\\" formControlName='services'/>&nbsp;Bakery</div>\\n    <div id=\\\"checkbox\\\"><input type=\\\"checkbox\\\" name=\\\"services\\\" value=\\\"Sweets\\\" formControlName='services'/>&nbsp;Sweets</div> \\n    </div>\\n    </div> \\n    <br><br><br><br>\\n    \\n    <div class=\\\"form-group\\\">\\n    <div class=\\\"form-check\\\" *ngFor=\\\"let servicetype of servicetypes; let i = index;\\\">\\n    <label class=\\\"form-check-label\\\" for=\\\"servicetype{{servicetype.value}}\\\">\\n    <input class=\\\"form-input-check\\\" type=\\\"checkbox\\\"\\n    id=\\\"servicetype{{servicetype.value}}\\\"\\n    name=\\\"servicetypeOptions\\\"\\n    (change)=\\\"changeCheckbox(i)\\\"\\n    [checked]=\\\"servicetype.checked\\\">\\n    {{servicetype.name}}\\n    </label>\\n    </div>\\n    </div>\\n    \\n    <div class=\\\"form-group\\\">\\n    <label>Services<span id=\\\"required\\\">*</span></label>\\n    <p *ngFor=\\\"let servicetype of viewData.servicetypes\\\">\\n    <input type=\\\"checkbox\\\" \\n    [checked]=\\\"services.servicetypes.includes(servicetype)\\\" \\n    (change)=\\\"changeServiceTypes(servicetype)\\\"> {{ servicetype.name }}\\n    </p>\\n    </div>\\n    --> \\n    <button id=\\\"button\\\" type=\\\"submit\\\" [disabled]='!userRegistration.valid'>Submit</button>\\n    \\n    </form>\\n    </div>\\n    <br>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormArray, FormControl, FormBuilder, NgForm, Validators, ValidatorFn } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../shared/services/user.service';\nimport { User } from '../shared/user';\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\n\nexport class SignupComponent implements OnInit {\n\n  firstName:string=\"\";\n  lastName:string=\"\";\n  userEmail:string=\"\";\n  userPassword:string=\"\";\n  userType:string=\"\";\n  userMobile:string=\"\";\n  userDob:string=\"\";\n  \n  emailPattern:string=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\";\n  \n  userRegistration:FormGroup;\n  \n  user: User = new User();\n  \n  constructor(private frmbuilder:FormBuilder, private router:Router,private userService: UserService) {\n  \n  this.userRegistration=frmbuilder.group({\n  firstName:['',Validators.compose([Validators.required,Validators.pattern('[a-zA-Z ][a-zA-Z ]+')])],\n  lastName:['',Validators.compose([Validators.required,Validators.pattern('[a-zA-Z ][a-zA-Z ]+')])],\n  userEmail:['',Validators.compose([Validators.required,Validators.pattern(this.emailPattern)])], \n  userPassword:['',Validators.compose([Validators.required])],\n  userType:['',Validators.compose([Validators.required])],\n  userMobile:['',Validators.compose([Validators.required])],\n  userDob:['',Validators.compose([Validators.required])]\n  \n  /* servicetypes: new FormArray(this.services.servicetypes.map(servicetype => new FormControl(servicetype)),Validators.minLength(1))\n  */ });\n  }\n  \n  ngOnInit() {\n  }\n  \n  /* changeServiceTypes(servicetype: any) {\n  var currentServiceTypeControls: FormArray = this.vendorRegistration.get('servicetype') as FormArray;\n  var index = currentServiceTypeControls.value.indexOf(servicetype);\n  if(index > -1) currentServiceTypeControls.removeAt(index) //If the user currently uses this schedule, remove it.\n  else currentServiceTypeControls.push(new FormControl(servicetype)); //Otherwise add this schedule.\n  } */\n  \n  saveUser(){\n    this.userService.create(this.user)\n    .subscribe(data => {\n  this.router.navigate(['/search',data]);\n  }, error => console.log(error));\n  this.user = new User(); \n  }\n  \n  }\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}